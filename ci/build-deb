#!/bin/bash

set -e
D="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"

# This script builds a binary dpkg for Debian based distros. It does not
# currently run in CI, and is instead run manually and the resulting dpkg is
# uploaded to GitHub at the end of this script.
#
# Note that this requires 'cargo deb', which can be installed with
# 'cargo install cargo-deb'.
#
# This should be run from the root of the ripgrep repo.

TARGET=''
INSTALL_ARG=''
PUBLISH=0
while (( $# )); do
    case "$1" in
        --target)
            if [[ -z "$2" ]]; then
                echo >2 "Error: missing argument to --target"
                exit 1
            fi
            TARGET="$2"
            shift
            ;;
        --install|-i)
            INSTALL_ARG='--install'
            ;;
        --publish)
            PUBLISH=1
            ;;
    esac
    shift
done

if [[ -n "$TARGET" ]]; then
    TARGET_ARGS=(--target "$TARGET")
else
    TARGET_ARGS=()
fi

if ! command -V cargo-deb > /dev/null 2>&1; then
  echo "cargo-deb command missing" >&2
  exit 1
fi

# perform a (native) debug build that we run to generate docs/completions
cargo build

DEPLOY_DIR=deployment/deb
mkdir -p "$DEPLOY_DIR"

# Generate man page and shell completions. `cargo deb` knows how to find these
# files via the manifest configuration in `Cargo.toml`.
make ASSET_DIR="$DEPLOY_DIR" assets

version="$(git describe --tags --match='[0-9]*' --dirty=+)"

# Since we're distributing the dpkg, we don't know whether the user will have
# PCRE2 installed, so just do a static build.
PCRE2_SYS_STATIC=1 cargo deb --strip "${TARGET_ARGS[@]}" --deb-version "$version" $INSTALL_ARG

if (( PUBLISH )); then
    target="target/x86_64-unknown-linux-musl/debian"
    deb="$target/ripgrep_$version-1_amd64.deb"
    debsum="$deb.sha256"
    shasum -a 256 "$deb" > "$debsum"
    gh release upload "$version" "$deb" "$debsum"
fi
